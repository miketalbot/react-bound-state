{"version":3,"sources":["../../node_modules/react-is/cjs/react-is.production.min.js","../../node_modules/object-assign/index.js","../../node_modules/react-is/cjs/react-is.development.js","../../node_modules/react-is/index.js","../../node_modules/prop-types/lib/ReactPropTypesSecret.js","../../node_modules/prop-types/checkPropTypes.js","../../node_modules/prop-types/factoryWithTypeCheckers.js","../../node_modules/prop-types/factoryWithThrowingShims.js","../../node_modules/prop-types/index.js","../../src/lib/get-set.js","../../node_modules/babel-plugin-transform-async-to-promises/helpers.js","../../src/lib/emitter.js","../../src/lib/observable-state-helpers.js","../../src/lib/observable-state.js","../../src/lib/sort.js","../../src/lib/event-bus.js","states.js","todo.js","dummy-data.js","profile.js","App.js","utils.js","index.js"],"names":["b","Symbol","for","c","d","e","f","g","h","k","l","m","n","q","r","t","w","x","y","z","a","u","$$typeof","type","A","getOwnPropertySymbols","module","require$$0","Object","prototype","hasOwnProperty","propIsEnumerable","propertyIsEnumerable","toObject","val","undefined","TypeError","assign","test1","String","getOwnPropertyNames","test2","i","fromCharCode","map","join","test3","split","forEach","letter","keys","err","shouldUseNative","checkPropTypes","typeSpecs","values","location","componentName","getStack","resetWarningCache","Function","call","bind","emptyFunction","emptyFunctionWithReset","shim","props","propName","propFullName","secret","ReactPropTypesSecret","Error","name","getShim","isRequired","ReactPropTypes","array","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","PropTypes","require$$2","get","path","defaultValue","parts","replaceArray","part","current","lastPart","value","_Pact","then","onFulfilled","onRejected","result","state","this","s","callback","_settle","v","o","_this","pact","observer","_isSettledPact","thenable","_iteratorSymbol","iterator","_forOf","target","body","check","step","reject","_cycle","next","done","return","_fixup","length","push","_forTo","asyncIterator","EventEntry","getChild","children","has","_all","prepareNames","names","separator","Array","Events","delimiter","wildcard","prepareHandlers","storeHandlers","on","scan","once","self","handler","off","idx","_emit","index","handlers","_callHandlers","promises","Promise","emit","event","toExecute","params","targetEvents","targetIds","ensureArray","useEvent","pattern","context","useEffect","getPath","property","patterns","getPatterns","key","output","standardExtract","returnValue","stateId","nextId","refreshId","IndexContext","React","Dummy","noop","createState","getTargetFrom","stack","useTargetContext","State","Bind","Bound","useState","useCurrentPath","useCurrentTarget","useContext","useBinding","transformIn","transformOut","updateOnBlur","extract","onChange","attribute","blurEvent","changed","useRef","existingTarget","localValue","setLocalValue","newValue","currentRefresh","refresh","currentValue","set","id","updateValue","recurseSet","useSetter","useRefresh","paths","p","Set","component","other","Component","extraProps","updatedValue","innerId","finalTarget","setFinalTarget","currentTarget","updatedPath","subTarget","inPriorityOrder","va","vb","window","globalState","styleState","SortableList","SortableContainer","List","SortableItem","SortableElement","ListItem","Todos","console","log","setTodos","Box","ml","Typography","variant","gutterBottom","width","clone","distance","onSortEnd","oldIndex","newIndex","prev","previousIndex","splice","arrayMoveInPlace","helperClass","Todo","mt","Button","color","onClick","newTodo","prompt","title","description","setTitle","todos","me","fontWeight","Card","className","CardHeader","avatar","style","textDecoration","action","Checkbox","checked","CardContent","Input","label","multiline","CardActions","newName","filter","defaultExample","profile","Description","Combo","options","Profile","classes","useStyles","Bubble","borderRadius","bgcolor","height","theme","createMuiTheme","palette","primary","example","JSON","parse","localStorage","getItem","stringify","styles","fontSize","textAlign","textShadow","boxShadow","original","TextField","fullWidth","_","Autocomplete","renderInput","makeStyles","icon","marginRight","spacing","topBar","cursor","githubIcon","save","fn","delay","clearTimeout","setTimeout","debounce","data","setItem","Example","resetStyles","resetContents","setColor","setWeight","Grid","container","item","md","getOptionLabel","word","slice","toUpperCase","toLowerCase","titleize","display","mr","Math","random","App","ThemeProvider","CssBaseline","AppBar","position","Toolbar","noWrap","flexGrow","href","data-color-scheme","data-icon","data-size","data-show-count","aria-label","IconButton","Container","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5b06deb6.chunk.js","sourcesContent":["/** @license React v16.13.1\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var b=\"function\"===typeof Symbol&&Symbol.for,c=b?Symbol.for(\"react.element\"):60103,d=b?Symbol.for(\"react.portal\"):60106,e=b?Symbol.for(\"react.fragment\"):60107,f=b?Symbol.for(\"react.strict_mode\"):60108,g=b?Symbol.for(\"react.profiler\"):60114,h=b?Symbol.for(\"react.provider\"):60109,k=b?Symbol.for(\"react.context\"):60110,l=b?Symbol.for(\"react.async_mode\"):60111,m=b?Symbol.for(\"react.concurrent_mode\"):60111,n=b?Symbol.for(\"react.forward_ref\"):60112,p=b?Symbol.for(\"react.suspense\"):60113,q=b?\nSymbol.for(\"react.suspense_list\"):60120,r=b?Symbol.for(\"react.memo\"):60115,t=b?Symbol.for(\"react.lazy\"):60116,v=b?Symbol.for(\"react.block\"):60121,w=b?Symbol.for(\"react.fundamental\"):60117,x=b?Symbol.for(\"react.responder\"):60118,y=b?Symbol.for(\"react.scope\"):60119;\nfunction z(a){if(\"object\"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;exports.Lazy=t;exports.Memo=r;exports.Portal=d;\nexports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isAsyncMode=function(a){return A(a)||z(a)===l};exports.isConcurrentMode=A;exports.isContextConsumer=function(a){return z(a)===k};exports.isContextProvider=function(a){return z(a)===h};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return z(a)===n};exports.isFragment=function(a){return z(a)===e};exports.isLazy=function(a){return z(a)===t};\nexports.isMemo=function(a){return z(a)===r};exports.isPortal=function(a){return z(a)===d};exports.isProfiler=function(a){return z(a)===g};exports.isStrictMode=function(a){return z(a)===f};exports.isSuspense=function(a){return z(a)===p};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||\"object\"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};exports.typeOf=z;\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","/** @license React v16.13.1\n * react-is.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n'use strict';\n\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar hasSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;\nvar REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;\nvar REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;\nvar REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;\nvar REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;\nvar REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;\nvar REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary\n// (unstable) APIs that have been removed. Can we remove the symbols?\n\nvar REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;\nvar REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;\nvar REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;\nvar REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;\nvar REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;\nvar REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;\nvar REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;\nvar REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;\nvar REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;\nvar REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;\nvar REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;\n\nfunction isValidElementType(type) {\n  return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.\n  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);\n}\n\nfunction typeOf(object) {\n  if (typeof object === 'object' && object !== null) {\n    var $$typeof = object.$$typeof;\n\n    switch ($$typeof) {\n      case REACT_ELEMENT_TYPE:\n        var type = object.type;\n\n        switch (type) {\n          case REACT_ASYNC_MODE_TYPE:\n          case REACT_CONCURRENT_MODE_TYPE:\n          case REACT_FRAGMENT_TYPE:\n          case REACT_PROFILER_TYPE:\n          case REACT_STRICT_MODE_TYPE:\n          case REACT_SUSPENSE_TYPE:\n            return type;\n\n          default:\n            var $$typeofType = type && type.$$typeof;\n\n            switch ($$typeofType) {\n              case REACT_CONTEXT_TYPE:\n              case REACT_FORWARD_REF_TYPE:\n              case REACT_LAZY_TYPE:\n              case REACT_MEMO_TYPE:\n              case REACT_PROVIDER_TYPE:\n                return $$typeofType;\n\n              default:\n                return $$typeof;\n            }\n\n        }\n\n      case REACT_PORTAL_TYPE:\n        return $$typeof;\n    }\n  }\n\n  return undefined;\n} // AsyncMode is deprecated along with isAsyncMode\n\nvar AsyncMode = REACT_ASYNC_MODE_TYPE;\nvar ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;\nvar ContextConsumer = REACT_CONTEXT_TYPE;\nvar ContextProvider = REACT_PROVIDER_TYPE;\nvar Element = REACT_ELEMENT_TYPE;\nvar ForwardRef = REACT_FORWARD_REF_TYPE;\nvar Fragment = REACT_FRAGMENT_TYPE;\nvar Lazy = REACT_LAZY_TYPE;\nvar Memo = REACT_MEMO_TYPE;\nvar Portal = REACT_PORTAL_TYPE;\nvar Profiler = REACT_PROFILER_TYPE;\nvar StrictMode = REACT_STRICT_MODE_TYPE;\nvar Suspense = REACT_SUSPENSE_TYPE;\nvar hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated\n\nfunction isAsyncMode(object) {\n  {\n    if (!hasWarnedAboutDeprecatedIsAsyncMode) {\n      hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint\n\n      console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');\n    }\n  }\n\n  return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;\n}\nfunction isConcurrentMode(object) {\n  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;\n}\nfunction isContextConsumer(object) {\n  return typeOf(object) === REACT_CONTEXT_TYPE;\n}\nfunction isContextProvider(object) {\n  return typeOf(object) === REACT_PROVIDER_TYPE;\n}\nfunction isElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\nfunction isForwardRef(object) {\n  return typeOf(object) === REACT_FORWARD_REF_TYPE;\n}\nfunction isFragment(object) {\n  return typeOf(object) === REACT_FRAGMENT_TYPE;\n}\nfunction isLazy(object) {\n  return typeOf(object) === REACT_LAZY_TYPE;\n}\nfunction isMemo(object) {\n  return typeOf(object) === REACT_MEMO_TYPE;\n}\nfunction isPortal(object) {\n  return typeOf(object) === REACT_PORTAL_TYPE;\n}\nfunction isProfiler(object) {\n  return typeOf(object) === REACT_PROFILER_TYPE;\n}\nfunction isStrictMode(object) {\n  return typeOf(object) === REACT_STRICT_MODE_TYPE;\n}\nfunction isSuspense(object) {\n  return typeOf(object) === REACT_SUSPENSE_TYPE;\n}\n\nexports.AsyncMode = AsyncMode;\nexports.ConcurrentMode = ConcurrentMode;\nexports.ContextConsumer = ContextConsumer;\nexports.ContextProvider = ContextProvider;\nexports.Element = Element;\nexports.ForwardRef = ForwardRef;\nexports.Fragment = Fragment;\nexports.Lazy = Lazy;\nexports.Memo = Memo;\nexports.Portal = Portal;\nexports.Profiler = Profiler;\nexports.StrictMode = StrictMode;\nexports.Suspense = Suspense;\nexports.isAsyncMode = isAsyncMode;\nexports.isConcurrentMode = isConcurrentMode;\nexports.isContextConsumer = isContextConsumer;\nexports.isContextProvider = isContextProvider;\nexports.isElement = isElement;\nexports.isForwardRef = isForwardRef;\nexports.isFragment = isFragment;\nexports.isLazy = isLazy;\nexports.isMemo = isMemo;\nexports.isPortal = isPortal;\nexports.isProfiler = isProfiler;\nexports.isStrictMode = isStrictMode;\nexports.isSuspense = isSuspense;\nexports.isValidElementType = isValidElementType;\nexports.typeOf = typeOf;\n  })();\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar printWarning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n  var loggedTypeFailures = {};\n  var has = Function.call.bind(Object.prototype.hasOwnProperty);\n\n  printWarning = function(text) {\n    var message = 'Warning: ' + text;\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n}\n\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?Function} getStack Returns the component stack.\n * @private\n */\nfunction checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n  if (process.env.NODE_ENV !== 'production') {\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error;\n        // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            var err = Error(\n              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +\n              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.'\n            );\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n        } catch (ex) {\n          error = ex;\n        }\n        if (error && !(error instanceof Error)) {\n          printWarning(\n            (componentName || 'React class') + ': type specification of ' +\n            location + ' `' + typeSpecName + '` is invalid; the type checker ' +\n            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +\n            'You may have forgotten to pass an argument to the type checker ' +\n            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +\n            'shape all require an argument).'\n          );\n        }\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error.message] = true;\n\n          var stack = getStack ? getStack() : '';\n\n          printWarning(\n            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')\n          );\n        }\n      }\n    }\n  }\n}\n\n/**\n * Resets warning cache when testing.\n *\n * @private\n */\ncheckPropTypes.resetWarningCache = function() {\n  if (process.env.NODE_ENV !== 'production') {\n    loggedTypeFailures = {};\n  }\n}\n\nmodule.exports = checkPropTypes;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactIs = require('react-is');\nvar assign = require('object-assign');\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\nvar checkPropTypes = require('./checkPropTypes');\n\nvar has = Function.call.bind(Object.prototype.hasOwnProperty);\nvar printWarning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  printWarning = function(text) {\n    var message = 'Warning: ' + text;\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n}\n\nfunction emptyFunctionThatReturnsNull() {\n  return null;\n}\n\nmodule.exports = function(isValidElement, throwOnDirectAccess) {\n  /* global Symbol */\n  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n  /**\n   * Returns the iterator method function contained on the iterable object.\n   *\n   * Be sure to invoke the function with the iterable as context:\n   *\n   *     var iteratorFn = getIteratorFn(myIterable);\n   *     if (iteratorFn) {\n   *       var iterator = iteratorFn.call(myIterable);\n   *       ...\n   *     }\n   *\n   * @param {?object} maybeIterable\n   * @return {?function}\n   */\n  function getIteratorFn(maybeIterable) {\n    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n    if (typeof iteratorFn === 'function') {\n      return iteratorFn;\n    }\n  }\n\n  /**\n   * Collection of methods that allow declaration and validation of props that are\n   * supplied to React components. Example usage:\n   *\n   *   var Props = require('ReactPropTypes');\n   *   var MyArticle = React.createClass({\n   *     propTypes: {\n   *       // An optional string prop named \"description\".\n   *       description: Props.string,\n   *\n   *       // A required enum prop named \"category\".\n   *       category: Props.oneOf(['News','Photos']).isRequired,\n   *\n   *       // A prop named \"dialog\" that requires an instance of Dialog.\n   *       dialog: Props.instanceOf(Dialog).isRequired\n   *     },\n   *     render: function() { ... }\n   *   });\n   *\n   * A more formal specification of how these methods are used:\n   *\n   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n   *   decl := ReactPropTypes.{type}(.isRequired)?\n   *\n   * Each and every declaration produces a function with the same signature. This\n   * allows the creation of custom validation functions. For example:\n   *\n   *  var MyLink = React.createClass({\n   *    propTypes: {\n   *      // An optional string or URI prop named \"href\".\n   *      href: function(props, propName, componentName) {\n   *        var propValue = props[propName];\n   *        if (propValue != null && typeof propValue !== 'string' &&\n   *            !(propValue instanceof URI)) {\n   *          return new Error(\n   *            'Expected a string or an URI for ' + propName + ' in ' +\n   *            componentName\n   *          );\n   *        }\n   *      }\n   *    },\n   *    render: function() {...}\n   *  });\n   *\n   * @internal\n   */\n\n  var ANONYMOUS = '<<anonymous>>';\n\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.\n  var ReactPropTypes = {\n    array: createPrimitiveTypeChecker('array'),\n    bool: createPrimitiveTypeChecker('boolean'),\n    func: createPrimitiveTypeChecker('function'),\n    number: createPrimitiveTypeChecker('number'),\n    object: createPrimitiveTypeChecker('object'),\n    string: createPrimitiveTypeChecker('string'),\n    symbol: createPrimitiveTypeChecker('symbol'),\n\n    any: createAnyTypeChecker(),\n    arrayOf: createArrayOfTypeChecker,\n    element: createElementTypeChecker(),\n    elementType: createElementTypeTypeChecker(),\n    instanceOf: createInstanceTypeChecker,\n    node: createNodeChecker(),\n    objectOf: createObjectOfTypeChecker,\n    oneOf: createEnumTypeChecker,\n    oneOfType: createUnionTypeChecker,\n    shape: createShapeTypeChecker,\n    exact: createStrictShapeTypeChecker,\n  };\n\n  /**\n   * inlined Object.is polyfill to avoid requiring consumers ship their own\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n   */\n  /*eslint-disable no-self-compare*/\n  function is(x, y) {\n    // SameValue algorithm\n    if (x === y) {\n      // Steps 1-5, 7-10\n      // Steps 6.b-6.e: +0 != -0\n      return x !== 0 || 1 / x === 1 / y;\n    } else {\n      // Step 6.a: NaN == NaN\n      return x !== x && y !== y;\n    }\n  }\n  /*eslint-enable no-self-compare*/\n\n  /**\n   * We use an Error-like object for backward compatibility as people may call\n   * PropTypes directly and inspect their output. However, we don't use real\n   * Errors anymore. We don't inspect their stack anyway, and creating them\n   * is prohibitively expensive if they are created too often, such as what\n   * happens in oneOfType() for any type before the one that matched.\n   */\n  function PropTypeError(message) {\n    this.message = message;\n    this.stack = '';\n  }\n  // Make `instanceof Error` still work for returned errors.\n  PropTypeError.prototype = Error.prototype;\n\n  function createChainableTypeChecker(validate) {\n    if (process.env.NODE_ENV !== 'production') {\n      var manualPropTypeCallCache = {};\n      var manualPropTypeWarningCount = 0;\n    }\n    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\n      componentName = componentName || ANONYMOUS;\n      propFullName = propFullName || propName;\n\n      if (secret !== ReactPropTypesSecret) {\n        if (throwOnDirectAccess) {\n          // New behavior only for users of `prop-types` package\n          var err = new Error(\n            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n            'Use `PropTypes.checkPropTypes()` to call them. ' +\n            'Read more at http://fb.me/use-check-prop-types'\n          );\n          err.name = 'Invariant Violation';\n          throw err;\n        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {\n          // Old behavior for people using React.PropTypes\n          var cacheKey = componentName + ':' + propName;\n          if (\n            !manualPropTypeCallCache[cacheKey] &&\n            // Avoid spamming the console because they are often not actionable except for lib authors\n            manualPropTypeWarningCount < 3\n          ) {\n            printWarning(\n              'You are manually calling a React.PropTypes validation ' +\n              'function for the `' + propFullName + '` prop on `' + componentName  + '`. This is deprecated ' +\n              'and will throw in the standalone `prop-types` package. ' +\n              'You may be seeing this warning due to a third-party PropTypes ' +\n              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.'\n            );\n            manualPropTypeCallCache[cacheKey] = true;\n            manualPropTypeWarningCount++;\n          }\n        }\n      }\n      if (props[propName] == null) {\n        if (isRequired) {\n          if (props[propName] === null) {\n            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));\n          }\n          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));\n        }\n        return null;\n      } else {\n        return validate(props, propName, componentName, location, propFullName);\n      }\n    }\n\n    var chainedCheckType = checkType.bind(null, false);\n    chainedCheckType.isRequired = checkType.bind(null, true);\n\n    return chainedCheckType;\n  }\n\n  function createPrimitiveTypeChecker(expectedType) {\n    function validate(props, propName, componentName, location, propFullName, secret) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== expectedType) {\n        // `propValue` being instance of, say, date/regexp, pass the 'object'\n        // check, but we can offer a more precise error message here rather than\n        // 'of type `object`'.\n        var preciseType = getPreciseType(propValue);\n\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createAnyTypeChecker() {\n    return createChainableTypeChecker(emptyFunctionThatReturnsNull);\n  }\n\n  function createArrayOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');\n      }\n      var propValue = props[propName];\n      if (!Array.isArray(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n      }\n      for (var i = 0; i < propValue.length; i++) {\n        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);\n        if (error instanceof Error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!isValidElement(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!ReactIs.isValidElementType(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createInstanceTypeChecker(expectedClass) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!(props[propName] instanceof expectedClass)) {\n        var expectedClassName = expectedClass.name || ANONYMOUS;\n        var actualClassName = getClassName(props[propName]);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createEnumTypeChecker(expectedValues) {\n    if (!Array.isArray(expectedValues)) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (arguments.length > 1) {\n          printWarning(\n            'Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' +\n            'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).'\n          );\n        } else {\n          printWarning('Invalid argument supplied to oneOf, expected an array.');\n        }\n      }\n      return emptyFunctionThatReturnsNull;\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      for (var i = 0; i < expectedValues.length; i++) {\n        if (is(propValue, expectedValues[i])) {\n          return null;\n        }\n      }\n\n      var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {\n        var type = getPreciseType(value);\n        if (type === 'symbol') {\n          return String(value);\n        }\n        return value;\n      });\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createObjectOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');\n      }\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n      }\n      for (var key in propValue) {\n        if (has(propValue, key)) {\n          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n          if (error instanceof Error) {\n            return error;\n          }\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createUnionTypeChecker(arrayOfTypeCheckers) {\n    if (!Array.isArray(arrayOfTypeCheckers)) {\n      process.env.NODE_ENV !== 'production' ? printWarning('Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;\n      return emptyFunctionThatReturnsNull;\n    }\n\n    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n      var checker = arrayOfTypeCheckers[i];\n      if (typeof checker !== 'function') {\n        printWarning(\n          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +\n          'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.'\n        );\n        return emptyFunctionThatReturnsNull;\n      }\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n        var checker = arrayOfTypeCheckers[i];\n        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {\n          return null;\n        }\n      }\n\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createNodeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!isNode(props[propName])) {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      for (var key in shapeTypes) {\n        var checker = shapeTypes[key];\n        if (!checker) {\n          continue;\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createStrictShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      // We need to check all keys in case some are required but missing from\n      // props.\n      var allKeys = assign({}, props[propName], shapeTypes);\n      for (var key in allKeys) {\n        var checker = shapeTypes[key];\n        if (!checker) {\n          return new PropTypeError(\n            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +\n            '\\nBad object: ' + JSON.stringify(props[propName], null, '  ') +\n            '\\nValid keys: ' +  JSON.stringify(Object.keys(shapeTypes), null, '  ')\n          );\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function isNode(propValue) {\n    switch (typeof propValue) {\n      case 'number':\n      case 'string':\n      case 'undefined':\n        return true;\n      case 'boolean':\n        return !propValue;\n      case 'object':\n        if (Array.isArray(propValue)) {\n          return propValue.every(isNode);\n        }\n        if (propValue === null || isValidElement(propValue)) {\n          return true;\n        }\n\n        var iteratorFn = getIteratorFn(propValue);\n        if (iteratorFn) {\n          var iterator = iteratorFn.call(propValue);\n          var step;\n          if (iteratorFn !== propValue.entries) {\n            while (!(step = iterator.next()).done) {\n              if (!isNode(step.value)) {\n                return false;\n              }\n            }\n          } else {\n            // Iterator will provide entry [k,v] tuples rather than values.\n            while (!(step = iterator.next()).done) {\n              var entry = step.value;\n              if (entry) {\n                if (!isNode(entry[1])) {\n                  return false;\n                }\n              }\n            }\n          }\n        } else {\n          return false;\n        }\n\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  function isSymbol(propType, propValue) {\n    // Native Symbol.\n    if (propType === 'symbol') {\n      return true;\n    }\n\n    // falsy value can't be a Symbol\n    if (!propValue) {\n      return false;\n    }\n\n    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n    if (propValue['@@toStringTag'] === 'Symbol') {\n      return true;\n    }\n\n    // Fallback for non-spec compliant Symbols which are polyfilled.\n    if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n      return true;\n    }\n\n    return false;\n  }\n\n  // Equivalent of `typeof` but with special handling for array and regexp.\n  function getPropType(propValue) {\n    var propType = typeof propValue;\n    if (Array.isArray(propValue)) {\n      return 'array';\n    }\n    if (propValue instanceof RegExp) {\n      // Old webkits (at least until Android 4.0) return 'function' rather than\n      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n      // passes PropTypes.object.\n      return 'object';\n    }\n    if (isSymbol(propType, propValue)) {\n      return 'symbol';\n    }\n    return propType;\n  }\n\n  // This handles more types than `getPropType`. Only used for error messages.\n  // See `createPrimitiveTypeChecker`.\n  function getPreciseType(propValue) {\n    if (typeof propValue === 'undefined' || propValue === null) {\n      return '' + propValue;\n    }\n    var propType = getPropType(propValue);\n    if (propType === 'object') {\n      if (propValue instanceof Date) {\n        return 'date';\n      } else if (propValue instanceof RegExp) {\n        return 'regexp';\n      }\n    }\n    return propType;\n  }\n\n  // Returns a string that is postfixed to a warning about an invalid type.\n  // For example, \"undefined\" or \"of type array\"\n  function getPostfixForTypeWarning(value) {\n    var type = getPreciseType(value);\n    switch (type) {\n      case 'array':\n      case 'object':\n        return 'an ' + type;\n      case 'boolean':\n      case 'date':\n      case 'regexp':\n        return 'a ' + type;\n      default:\n        return type;\n    }\n  }\n\n  // Returns class name of the object, if any.\n  function getClassName(propValue) {\n    if (!propValue.constructor || !propValue.constructor.name) {\n      return ANONYMOUS;\n    }\n    return propValue.constructor.name;\n  }\n\n  ReactPropTypes.checkPropTypes = checkPropTypes;\n  ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","export function get(object, path, defaultValue) {\n    path = replaceArray(path)\n    const parts = path.split(\".\").filter(Boolean)\n    if (parts.length === 0) return object\n    for (let i = 0, l = parts.length - 1; i < l; i++) {\n        const part = parts[i]\n        const current = object[part]\n        if (current && typeof current === \"object\") {\n            object = current\n        } else if (current === undefined || current === null) {\n            object = object[part] = {}\n        } else {\n            throw new Error(\"Invalid Path\")\n        }\n    }\n    let lastPart = parts[parts.length - 1]\n    let value = object[lastPart]\n    value = value !== undefined ? value : defaultValue\n    object[lastPart] = value\n    return value\n}\n\nexport function replaceArray(path) {\n    return path.replace(/^\\./, \"\").replace(/\\[/g, \".\").replace(/]/g, \"\")\n}\n\nexport function set(object, path, value) {\n    const start = object\n    path = replaceArray(path)\n    const parts = path.split(\".\").filter(Boolean)\n    if (parts.length === 0) return\n    for (let i = 0, l = parts.length - 1; i < l; i++) {\n        const part = parts[i]\n        const current = object[part]\n        if (current && typeof current === \"object\") {\n            object = current\n        } else if (current === undefined || current === null) {\n            object = object[part] = {}\n        } else {\n            throw new Error(\"Invalid Path\")\n        }\n    }\n    object[parts[parts.length - 1]] = value\n    return value\n}\n","// A type of promise-like that resolves synchronously and supports only one observer\nexport const _Pact = /*#__PURE__*/(function() {\n\tfunction _Pact() {}\n\t_Pact.prototype.then = function(onFulfilled, onRejected) {\n\t\tconst result = new _Pact();\n\t\tconst state = this.s;\n\t\tif (state) {\n\t\t\tconst callback = state & 1 ? onFulfilled : onRejected;\n\t\t\tif (callback) {\n\t\t\t\ttry {\n\t\t\t\t\t_settle(result, 1, callback(this.v));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(result, 2, e);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.o = function(_this) {\n\t\t\ttry {\n\t\t\t\tconst value = _this.v;\n\t\t\t\tif (_this.s & 1) {\n\t\t\t\t\t_settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n\t\t\t\t} else if (onRejected) {\n\t\t\t\t\t_settle(result, 1, onRejected(value));\n\t\t\t\t} else {\n\t\t\t\t\t_settle(result, 2, value);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(result, 2, e);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t}\n\treturn _Pact;\n})();\n\n// Settles a pact synchronously\nexport function _settle(pact, state, value) {\n\tif (!pact.s) {\n\t\tif (value instanceof _Pact) {\n\t\t\tif (value.s) {\n\t\t\t\tif (state & 1) {\n\t\t\t\t\tstate = value.s;\n\t\t\t\t}\n\t\t\t\tvalue = value.v;\n\t\t\t} else {\n\t\t\t\tvalue.o = _settle.bind(null, pact, state);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (value && value.then) {\n\t\t\tvalue.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n\t\t\treturn;\n\t\t}\n\t\tpact.s = state;\n\t\tpact.v = value;\n\t\tconst observer = pact.o;\n\t\tif (observer) {\n\t\t\tobserver(pact);\n\t\t}\n\t}\n}\n\nexport function _isSettledPact(thenable) {\n\treturn thenable instanceof _Pact && thenable.s & 1;\n}\n\n// Converts argument to a function that always returns a Promise\nexport function _async(f) {\n\treturn function() {\n\t\tfor (var args = [], i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\t\ttry {\n\t\t\treturn Promise.resolve(f.apply(this, args));\n\t\t} catch(e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n}\n\n// Awaits on a value that may or may not be a Promise (equivalent to the await keyword in ES2015, with continuations passed explicitly)\nexport function _await(value, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(value) : value;\n\t}\n\tif (!value || !value.then) {\n\t\tvalue = Promise.resolve(value);\n\t}\n\treturn then ? value.then(then) : value;\n}\n\n// Awaits on a value that may or may not be a Promise, then ignores it\nexport function _awaitIgnored(value, direct) {\n\tif (!direct) {\n\t\treturn value && value.then ? value.then(_empty) : Promise.resolve();\n\t}\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continue(value, then) {\n\treturn value && value.then ? value.then(then) : then(value);\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continueIgnored(value) {\n\tif (value && value.then) {\n\t\treturn value.then(_empty);\n\t}\n}\n\n// Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\nexport function _forTo(array, body, check) {\n\tvar i = -1, pact, reject;\n\tfunction _cycle(result) {\n\t\ttry {\n\t\t\twhile (++i < array.length && (!check || !check())) {\n\t\t\t\tresult = body(i);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pact) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t} else {\n\t\t\t\tpact = result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t}\n\t}\n\t_cycle();\n\treturn pact;\n}\n\n// Asynchronously iterate through an object's properties (including properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forIn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tkeys.push(key);\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's own properties (excluding properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forOwn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tif (Object.prototype.hasOwnProperty.call(target, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\nexport const _iteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.iterator || (Symbol.iterator = Symbol(\"Symbol.iterator\"))) : \"@@iterator\";\n\n// Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\nexport function _forOf(target, body, check) {\n\tif (typeof target[_iteratorSymbol] === \"function\") {\n\t\tvar iterator = target[_iteratorSymbol](), step, pact, reject;\n\t\tfunction _cycle(result) {\n\t\t\ttry {\n\t\t\t\twhile (!(step = iterator.next()).done && (!check || !check())) {\n\t\t\t\t\tresult = body(step.value);\n\t\t\t\t\tif (result && result.then) {\n\t\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (pact) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t} else {\n\t\t\t\t\tpact = result;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t\t}\n\t\t}\n\t\t_cycle();\n\t\tif (iterator.return) {\n\t\t\tvar _fixup = function(value) {\n\t\t\t\ttry {\n\t\t\t\t\tif (!step.done) {\n\t\t\t\t\t\titerator.return();\n\t\t\t\t\t}\n\t\t\t\t} catch(e) {\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tif (pact && pact.then) {\n\t\t\t\treturn pact.then(_fixup, function(e) {\n\t\t\t\t\tthrow _fixup(e);\n\t\t\t\t});\n\t\t\t}\n\t\t\t_fixup();\n\t\t}\n\t\treturn pact;\n\t}\n\t// No support for Symbol.iterator\n\tif (!(\"length\" in target)) {\n\t\tthrow new TypeError(\"Object is not iterable\");\n\t}\n\t// Handle live collections properly\n\tvar values = [];\n\tfor (var i = 0; i < target.length; i++) {\n\t\tvalues.push(target[i]);\n\t}\n\treturn _forTo(values, function(i) { return body(values[i]); }, check);\n}\n\nexport const _asyncIteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\"))) : \"@@asyncIterator\";\n\n// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\nexport function _forAwaitOf(target, body, check) {\n\tif (typeof target[_asyncIteratorSymbol] === \"function\") {\n\t\tvar pact = new _Pact();\n\t\tvar iterator = target[_asyncIteratorSymbol]();\n\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\treturn pact;\n\t\tfunction _resumeAfterBody(result) {\n\t\t\tif (check && check()) {\n\t\t\t\treturn _settle(pact, 1, iterator.return ? iterator.return().then(function() { return result; }) : result);\n\t\t\t}\n\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t}\n\t\tfunction _resumeAfterNext(step) {\n\t\t\tif (step.done) {\n\t\t\t\t_settle(pact, 1);\n\t\t\t} else {\n\t\t\t\tPromise.resolve(body(step.value)).then(_resumeAfterBody).then(void 0, _reject);\n\t\t\t}\n\t\t}\n\t\tfunction _reject(error) {\n\t\t\t_settle(pact, 2, iterator.return ? iterator.return().then(function() { return error; }) : error);\n\t\t}\n\t}\n\treturn Promise.resolve(_forOf(target, function(value) { return Promise.resolve(value).then(body); }, check));\n}\n\n// Asynchronously implement a generic for loop\nexport function _for(test, update, body) {\n\tvar stage;\n\tfor (;;) {\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t\tif (shouldContinue.then) {\n\t\t\tstage = 0;\n\t\t\tbreak;\n\t\t}\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.s;\n\t\t\t} else {\n\t\t\t\tstage = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (update) {\n\t\t\tvar updateValue = update();\n\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\tstage = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvar pact = new _Pact();\n\tvar reject = _settle.bind(null, pact, 2);\n\t(stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tdo {\n\t\t\tif (update) {\n\t\t\t\tupdateValue = update();\n\t\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\t\tupdateValue.then(_resumeAfterUpdate).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshouldContinue = test();\n\t\t\tif (!shouldContinue || (_isSettledPact(shouldContinue) && !shouldContinue.v)) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t}\n\t\t} while (!result || !result.then);\n\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterBody(result);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n\tfunction _resumeAfterUpdate() {\n\t\tif (shouldContinue = test()) {\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterTest(shouldContinue);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a do ... while loop\nexport function _do(body, test) {\n\tvar awaitBody;\n\tdo {\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t} else {\n\t\t\t\tawaitBody = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t} while (!shouldContinue.then);\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : shouldContinue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tfor (;;) {\n\t\t\tshouldContinue = test();\n\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t}\n\t\t\tif (!shouldContinue) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\tresult = result.v;\n\t\t\t\t} else {\n\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tdo {\n\t\t\t\tresult = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshouldContinue = test();\n\t\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t\t}\n\t\t\t\tif (!shouldContinue) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while (!shouldContinue.then);\n\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a switch statement\nexport function _switch(discriminant, cases) {\n\tvar dispatchIndex = -1;\n\tvar awaitBody;\n\touter: {\n\t\tfor (var i = 0; i < cases.length; i++) {\n\t\t\tvar test = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvar testValue = test();\n\t\t\t\tif (testValue && testValue.then) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif (testValue === discriminant) {\n\t\t\t\t\tdispatchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Found the default case, set it as the pending dispatch case\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tif (dispatchIndex !== -1) {\n\t\t\tdo {\n\t\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\t\twhile (!body) {\n\t\t\t\t\tdispatchIndex++;\n\t\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t\t}\n\t\t\t\tvar result = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tawaitBody = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\t\tdispatchIndex++;\n\t\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : testValue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterTest(value) {\n\t\tfor (;;) {\n\t\t\tif (value === discriminant) {\n\t\t\t\tdispatchIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (++i === cases.length) {\n\t\t\t\tif (dispatchIndex !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttest = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvalue = test();\n\t\t\t\tif (value && value.then) {\n\t\t\t\t\tvalue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tdo {\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tvar result = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tdispatchIndex++;\n\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterBody(result) {\n\t\tfor (;;) {\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tif (!fallthroughCheck || fallthroughCheck()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatchIndex++;\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _call(body, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(body()) : body();\n\t}\n\ttry {\n\t\tvar result = Promise.resolve(body());\n\t\treturn then ? result.then(then) : result;\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\n// Asynchronously call a function and swallow the result\nexport function _callIgnored(body, direct) {\n\treturn _call(body, _empty, direct);\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _invoke(body, then) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(then);\n\t}\n\treturn then(result);\n}\n\n// Asynchronously call a function and swallow the result\nexport function _invokeIgnored(body) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(_empty);\n\t}\n}\n\n// Asynchronously call a function and send errors to recovery continuation\nexport function _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\n// Asynchronously await a promise and pass the result to a finally continuation\nexport function _finallyRethrows(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer(true, e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n\t}\n\treturn finalizer(false, result);\n}\n\n// Asynchronously await a promise and invoke a finally continuation that always overrides the result\nexport function _finally(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer();\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer, finalizer);\n\t}\n\treturn finalizer();\n}\n\n// Rethrow or return a value from a finally continuation\nexport function _rethrow(thrown, value) {\n\tif (thrown)\n\t\tthrow value;\n\treturn value;\n}\n\n// Empty function to implement break and other control flow that ignores asynchronous results\nexport function _empty() {\n}\n\n// Sentinel value for early returns in generators \nexport const _earlyReturn = /*#__PURE__*/ {};\n\n// Asynchronously call a function and send errors to recovery continuation, skipping early returns\nexport function _catchInGenerator(body, recover) {\n\treturn _catch(body, function(e) {\n\t\tif (e === _earlyReturn) {\n\t\t\tthrow e;\n\t\t}\n\t\treturn recover(e);\n\t});\n}\n\n// Asynchronous generator class; accepts the entrypoint of the generator, to which it passes itself when the generator should start\nexport const _AsyncGenerator = /*#__PURE__*/(function() {\n\tfunction _AsyncGenerator(entry) {\n\t\tthis._entry = entry;\n\t\tthis._pact = null;\n\t\tthis._resolve = null;\n\t\tthis._return = null;\n\t\tthis._promise = null;\n\t}\n\n\tfunction _wrapReturnedValue(value) {\n\t\treturn { value: value, done: true };\n\t}\n\tfunction _wrapYieldedValue(value) {\n\t\treturn { value: value, done: false };\n\t}\n\n\t_AsyncGenerator.prototype._yield = function(value) {\n\t\t// Yield the value to the pending next call\n\t\tthis._resolve(value && value.then ? value.then(_wrapYieldedValue) : _wrapYieldedValue(value));\n\t\t// Return a pact for an upcoming next/return/throw call\n\t\treturn this._pact = new _Pact();\n\t};\n\t_AsyncGenerator.prototype.next = function(value) {\n\t\t// Advance the generator, starting it if it has yet to be started\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tconst _entry = _this._entry;\n\t\t\t\tif (_entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the next call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Start the generator\n\t\t\t\t_this._entry = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\tfunction returnValue(value) {\n\t\t\t\t\t_this._resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t_this._resolve = null;\n\t\t\t\t}\n\t\t\t\tvar result = _entry(_this);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tresult.then(returnValue, function(error) {\n\t\t\t\t\t\tif (error === _earlyReturn) {\n\t\t\t\t\t\t\treturnValue(_this._return);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst pact = new _Pact();\n\t\t\t\t\t\t\t_this._resolve(pact);\n\t\t\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t\t\t_this._resolve = null;\n\t\t\t\t\t\t\t_resolve(pact, 2, error);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturnValue(result);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Generator is started and a yield expression is pending, settle it\n\t\t\t\t_this._pact = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\t_settle(_pact, 1, value);\n\t\t\t}\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.return = function(value) {\n\t\t// Early return from the generator if started, otherwise abandons the generator\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the return call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return the specified value\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t}\n\t\t\t// Settle the yield expression with a rejected \"early return\" value\n\t\t\t_this._return = value;\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, _earlyReturn);\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.throw = function(error) {\n\t\t// Inject an exception into the pending yield expression\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve, reject) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the throw call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return a rejected Promise containing the error\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t\t// Settle the yield expression with the value as a rejection\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, error);\n\t\t});\n\t};\n\n\t_AsyncGenerator.prototype[_asyncIteratorSymbol] = function() {\n\t\treturn this;\n\t};\n\t\n\treturn _AsyncGenerator;\n})();\n","class EventEntry {\n    constructor() {\n        this.children = new Map()\n        this.handlers = []\n        this.allBelow = []\n    }\n\n    getChild(key) {\n        let result\n        if (this.children.has(key)) return this.children.get(key)\n        this.children.set(key, (result = new EventEntry()))\n        return result\n    }\n\n    get all() {\n        return (this._all = this._all || new EventEntry())\n    }\n}\n\nfunction prepareNames(names, separator) {\n    if (typeof name === \"string\") {\n        return names.split(\",\")\n    } else if (Array.isArray(names)) {\n        return names.map((name) => name.split(\",\")).flat(Infinity)\n    } else {\n        throw new Error(\"Invalid pattern\" + names)\n    }\n}\n\n/**\n * @callback HandlePreparer\n *\n * @param {Array<Function>} handlers - the handlers being used\n * @return an updated array or the original array sorted\n */\n\n/**\n * @interface ConstructorParams\n * @property {string} [delimiter=.] - a character which delimits parts of an event pattern\n * @property {string} [wildcard=*] - a wildcard indicator used to handle any parts of a pattern\n * @property {string} [separator=,] - a character to separate multiple events in the same pattern\n * @property {HandlePreparer} [prepareHandlers=v=>v] - a function to modify the handlers just before raising,\n * this is the combined set of all of the handlers that will be raised.\n * @property {HandlePreparer} [storeHandlers=v=>v] - a function to modify or sort the handlers before storing,\n\n */\n\n/**\n * Event emitter with wild card support and delimited entries.\n */\nexport class Events {\n    /**\n     * Constructs an event emitter\n     * @param {ConstructorParams} [props] - parameters to configure the emitter\n     */\n    constructor({\n        delimiter = \".\",\n        wildcard = \"*\",\n        separator = \",\",\n        prepareHandlers = (v) => v,\n        storeHandlers = (v) => v\n    } = {}) {\n        this.delimiter = delimiter\n        this.wildcard = wildcard\n        this.separator = separator\n        this.doubleWild = `${wildcard}${wildcard}`\n        this.events = new EventEntry()\n        this.prepareHandlers = prepareHandlers\n        this.storeHandlers = storeHandlers\n    }\n\n    /**\n     * Adds an event listener with wildcards etc\n     * @instance\n     * @memberOf Events\n     * @param {string|Array<string>} names - the event patterns to handle\n     * @param {Function} handler - the handler for the pattern\n     */\n    on(names, handler) {\n        for (let name of prepareNames(names, this.separator)) {\n            const parts = name.split(this.delimiter)\n            let scan = this.events\n            for (let i = 0, l = parts.length; i < l; i++) {\n                const part = parts[i]\n                switch (part) {\n                    case this.wildcard:\n                        scan = scan.all\n                        break\n                    case this.doubleWild:\n                        scan.allBelow.push(handler)\n                        scan.allBelow = this.storeHandlers(scan.allBelow)\n                        return\n                    default:\n                        scan = scan.getChild(part)\n                        break\n                }\n            }\n            scan.handlers.push(handler)\n            scan.handlers = this.storeHandlers(scan.handlers)\n        }\n    }\n\n    /**\n     * Add an event listener that will fire only once, if multiple\n     * patterns are provided it will only fire on the first one\n     * @param {string|Array<string>} name - the event pattern to listen for\n     * @param {Function} handler - the function to invoke\n     */\n    once(name, handler) {\n        const self = this\n        self.on(name, process)\n\n        function process(...params) {\n            self.off(name, process)\n            handler(...params)\n        }\n    }\n\n    /**\n     * Removes a listener from a pattern\n     * @param {string|Array<string>} names - the pattern(s) of the handler to remove\n     * @param {Function} [handler] - the handler to remove, or all handlers\n     */\n    off(names, handler) {\n        for (let name of prepareNames(names, this.separator)) {\n            const parts = name.split(this.delimiter)\n            let scan = this.events\n            for (let i = 0, l = parts.length; i < l; i++) {\n                const part = parts[i]\n                switch (part) {\n                    case this.wildcard:\n                        scan = scan.all\n                        break\n                    case this.doubleWild: {\n                        if (handler === undefined) {\n                            scan.allBelow = []\n                            return\n                        }\n                        const idx = scan.allBelow.indexOf(handler)\n                        if (idx === -1) return\n                        scan.allBelow.splice(idx, 1)\n                        return\n                    }\n                    default:\n                        scan = scan.getChild(part)\n                        break\n                }\n            }\n\n            if (handler !== undefined) {\n                const idx = scan.handlers.indexOf(handler)\n                if (idx === -1) return\n                scan.handlers.splice(idx, 1)\n            } else {\n                scan.handlers = []\n            }\n        }\n    }\n\n    _emit(scan, parts, index, handlers) {\n        if (index >= parts.length) {\n            handlers.push(...scan.handlers)\n            return\n        }\n        handlers.push(...scan.allBelow)\n        this._emit(scan.all, parts, index + 1, handlers)\n        this._emit(scan.getChild(parts[index]), parts, index + 1, handlers)\n    }\n\n    _callHandlers(handlerList, params) {\n        for (const handler of handlerList) {\n            handler.apply(this, params)\n        }\n    }\n\n    async _callHandlersAsync(handlerList, params) {\n        for (const handler of handlerList) {\n            await handler.apply(this, params)\n        }\n    }\n\n    async _callHandlersAsyncAtOnce(handlerList, params) {\n        const promises = []\n        for (const handler of handlerList) {\n            promises.push(Promise.resolve(handler.apply(this, params)))\n        }\n        await Promise.all(promises)\n    }\n\n    /**\n     * Emits an event synchronously\n     * @param {string} event - the event to emit\n     * @param {...params} params - the parameters to call the event with\n     * @returns {Array<any>} - an array of the parameters the event was called with\n     */\n    emit(event, ...params) {\n        const handlers = []\n        this.event = event\n        const parts = event.split(this.delimiter)\n        this._emit(this.events, parts, 0, handlers)\n        const toExecute = this.prepareHandlers(handlers)\n        this._callHandlers(toExecute, params)\n        return params\n    }\n\n    /**\n     * Emits events asynchronously, in order, sequentially\n     * @param {string} event - the event to emit\n     * @param {...params} params - the parameters to call the event with\n     * @returns {Array<any>} - an array of the parameters the event was called with\n     */\n    async emitAsync(event, ...params) {\n        const handlers = []\n        this.event = event\n        const parts = event.split(this.delimiter)\n        this._emit(this.events, parts, 0, handlers)\n        const toExecute = this.prepareHandlers(handlers)\n        await this._callHandlersAsync(toExecute, params)\n        return params\n    }\n\n    /**\n     * Emits events asynchronously, in parallel\n     * @param {string} event - the event to emit\n     * @param {...params} params - the parameters to call the event with\n     * @returns {Array<any>} - an array of the parameters the event was called with\n     */\n    async emitAtOnce(event, ...params) {\n        const handlers = []\n        this.event = event\n        const parts = event.split(this.delimiter)\n        this._emit(this.events, parts, 0, handlers)\n        const toExecute = this.prepareHandlers(handlers)\n        await this._callHandlersAsyncAtOnce(toExecute, params)\n        return params\n    }\n}\n\nEvents.prototype.addEventListener = Events.prototype.on\nEvents.prototype.removeEventListener = Events.prototype.off\nEvents.prototype.addListener = Events.prototype.on\nEvents.prototype.removeListener = Events.prototype.off\n\nexport default Events\n","import { useEffect } from 'react'\nimport Events from \"./emitter\"\nimport { replaceArray } from './get-set'\n\nexport const targetEvents = new Events()\nexport const targetIds = new WeakMap()\n\nfunction ensureArray(v) {\n    return (Array.isArray(v) ? v : [v]).filter(Boolean)\n}\n\nexport function useEvent(pattern, handler, context) {\n    if(context) {\n        handler = handler.bind(context)\n    }\n    useEffect(() => {\n        ensureArray(pattern).forEach((pattern) =>\n            targetEvents.on(pattern, handler)\n        )\n        return () => {\n            ensureArray(pattern).forEach((pattern) =>\n                targetEvents.off(pattern, handler)\n            )\n        }\n    }, [pattern])\n}\n\nexport function getPath(property) {\n    return replaceArray(property).split(\".\").filter(Boolean)\n}\n\nconst patterns = new Map()\n\nexport function getPatterns(target, path) {\n    const id = `${targetIds.get(target)}`\n    const key = `${id}.${path.join(\".\")}`\n    if (patterns.has(key)) return patterns.get(key)\n    const output = []\n    let current = path[0]\n    output.push(`${current}`)\n    for (let i = 1, l = path.length; i < l; i++) {\n        current = `${current}.${path[i]}`\n        output.push(current)\n    }\n    patterns.set(key, output)\n    return output\n}\n\nexport function standardExtract(event) {\n    if (!event) return\n    if (event.target) return event.target.value\n    return event\n}\n\nexport function returnValue(v) {\n    return v\n}\n","import PropTypes from 'prop-types'\nimport React, { useContext, useRef, useState } from \"react\"\nimport { get, set } from \"./get-set\"\nimport {\n    getPath,\n    getPatterns,\n    returnValue,\n    standardExtract,\n    targetEvents,\n    targetIds,\n    useEvent\n} from \"./observable-state-helpers\"\n\nlet stateId = 0\nlet nextId = 0\nlet refreshId = 0\n\nconst IndexContext = React.createContext(0)\n\nexport function useIndex() {\n    return useContext(IndexContext)\n}\n\nfunction Dummy({ children }) {\n    return <>{children}</>\n}\n\nfunction noop() {}\nnoop.refresh = noop\n\n/**\n * @function TransformValue\n * @param {any} value - the value to be transformed\n * @returns {any} the transformed value\n */\n\n/**\n * @function Extractor\n * @param {any} event - the parameter of the event handler\n * @returns {any} the extracted value\n */\n\n/**\n * Creates a state with a given name, the state is created\n * unbound\n * @param {string} name - a name for the state\n * @returns {State}\n * @example\n *\n * const state = createState(\"global\")\n * const {Bind, bind} = state\n * const Input = bind({component: <TextField variant=\"outlined\"/>})\n * const stateObject = {title: \"global\"}\n *\n * function App() {\n *     return <Bind target={stateObject}>\n *         <Inner/>\n *     </Bind>\n * }\n *\n * function Inner() {\n *     return <div>\n *         <Input property=\"title\" label=\"title\"/>\n *         <Input property=\"somethingElse\" label=\"other\" defaultValue=\"\"/>\n *     </div>\n * }\n */\nexport function createState(name) {\n    return new State(name)\n}\n\nfunction emit(target, path, property, value) {\n    targetEvents.emit(\n        `${[...path, ...getPath(property)].filter(Boolean).join(\".\")}`,\n        value\n    )\n}\n\nfunction getTargetFrom(property, target, path, stack) {\n    for (let i = 0; i < property.length && i < stack.length - 1; i++) {\n        if (property[i] === \"^\") {\n            let step = stack[stack.length - 2 - i]\n            target = step.target\n            path = step.path\n        } else {\n            break\n        }\n    }\n    return [property.replace(/^\\^*/g, \"\"), target, path]\n}\n\nconst useTargetContext = Symbol(\"useTargetContext\")\n\n/**\n * A class representing a unique state\n * @hideconstructor\n */\nclass State {\n    [useTargetContext]() {\n        return useContext(this.context)\n    }\n\n    /**\n     * Provides a way of creating binding values\n     * for a component\n     * @param {string} property - the property of the current state to bind\n     * @param {any} [defaultValue] - the default value for the property\n     * @param {TransformValue} [transformIn] - a function to transform inbound values\n     * @param {TransformValue} [transformOut] - a function to transform outbound values\n     * @param {any} [updateOnBlur] - set if the component should only update when it blurs\n     * @param {Extractor} [extract] - a function that transforms event values to real values - default\n     * version will extract from event.target.value if available, otherwise the value itself\n     * @param {Function} onChange\n     * @param {string} [attribute=\"value\"] - the attribute to bind to\n     * @param {string} [event=\"onChange\"] - the event to be bound for changes\n     * @param {string} [blurEvent=\"onBlur\"] - the event for blurring\n     * @param {object} [target] - an override for the target\n     * @returns {object} an object containing the specified value and change function\n     * @example\n     *\n     * const {props} = state.useBinding()\n     * return <input {...props}/>\n     */\n    useBinding(\n        property,\n        {\n            defaultValue,\n            transformIn = returnValue,\n            transformOut = returnValue,\n            updateOnBlur,\n            extract = standardExtract,\n            onChange = noop,\n            attribute = \"value\",\n            event = \"onChange\",\n            blurEvent = \"onBlur\",\n            target\n        } = {}\n    ) {\n        const changed = useRef(false)\n        let { target: existingTarget, path, stack } = this[useTargetContext]()\n        target = target || existingTarget\n        ;[property, target, path] = getTargetFrom(property, target, path, stack)\n        const value = useRef(transformIn(get(target, property, defaultValue)))\n        const [localValue, setLocalValue] = React.useState(value.current)\n\n        useEvent(\n            getPatterns(target, [...path, ...getPath(property), \"**\"]),\n            update\n        )\n        const [, refresh] = useState(-1)\n        const currentRefresh = useRef()\n        React.useEffect(() => {\n            return () => {\n                currentRefresh.current = noop\n            }\n        }, [])\n        setLocalValue.refresh = refresh\n        currentRefresh.current = setLocalValue\n\n        return {\n            [attribute]: localValue,\n            [event]: updateValue,\n            [blurEvent]: blur\n        }\n\n        function update() {\n            let newValue = transformIn(get(target, property, defaultValue))\n            if (newValue !== value.current) {\n                value.current = newValue\n                currentRefresh.current(value.current)\n\n            }\n            currentRefresh.current.refresh(nextId++)\n        }\n\n        function updateValue(...params) {\n            let currentValue = extract(...params)\n            const newValue = transformOut(currentValue)\n\n            if (updateOnBlur) {\n                value.current = newValue\n                changed.current = true\n                currentRefresh.current(currentValue)\n            } else {\n                set(target, property, newValue)\n                onChange(newValue)\n                emit(target, path, property, newValue)\n            }\n        }\n\n        function blur() {\n            if (changed.current) {\n                changed.current = false\n                set(target, property, value.current)\n                onChange(value.current)\n                emit(target, path, property, value.current)\n            }\n        }\n    }\n\n    constructor(name) {\n        this.name = name\n        this.id = stateId++\n        this.context = React.createContext({\n            target: null,\n            path: [],\n            stack: []\n        })\n\n        this.Bind = this.Bind.bind(this)\n        this.Bound = this.Bound.bind(this)\n        this.bind = this.bind.bind(this)\n        this.useState = this.useState.bind(this)\n        this.useCurrentPath = this.useCurrentPath.bind(this)\n        this.useCurrentTarget = this.useCurrentTarget.bind(this)\n    }\n\n    Bind = Bind\n    Bound = Bound\n\n    /**\n     * Provides access to information in the state that will be updated\n     * any time a state change would affect it\n     * @param {string} property - the property path of the state required\n     * @param {any} [defaultValue] - a default value for the state\n     * @param {object} [target] - an override for the standard state\n     * @returns {Array} an array containing the state value and an update function\n     * @example\n     *\n     * const [name, setName] = state.useState(\"person.firstName\")\n     * return <div onClick={clearFirstName}>{name}</div>\n     * function clearFirstName() {\n     *     setName(\"\")\n     * }\n     */\n    useState(property = \"\", defaultValue, target) {\n        let { target: existingTarget, path, stack } = this[useTargetContext]()\n        target = target || existingTarget\n        ;[property, target, path] = getTargetFrom(property, target, path, stack)\n        const value = get(target, property, defaultValue)\n        const [id, refresh] = useState(-1)\n        const currentRefresh = useRef()\n        React.useEffect(() => {\n            return () => {\n                currentRefresh.current = noop\n            }\n        }, [])\n\n        currentRefresh.current = refresh\n        useEvent(getPatterns(target, [...path, ...getPath(property)]), update)\n        updateValue.set = updateMany\n        return [value, updateValue, id]\n\n        function update() {\n            currentRefresh.current(refreshId++)\n        }\n\n        function updateValue(newValue) {\n            if (typeof newValue === \"function\") {\n                newValue = newValue(get(target, property, defaultValue))\n            }\n            set(target, property, newValue)\n            emit(target, path, property, newValue)\n        }\n\n        function updateMany(newValue) {\n            recurseSet(newValue, value, [...path, ...getPath(property)])\n        }\n    }\n\n    /**\n     * @function Setter\n     * @param {any} value - the value to set\n     *\n     */\n\n    /**\n     * Returns a setter for properties\n     * @param {string} property - the property to set\n     * @param {any} [target] - an override for the current value\n     * @returns {Setter} - a value to set other values\n     */\n    useSetter(property = \"\", target) {\n        let { target: existingTarget, path, stack } = this[useTargetContext]()\n        target = target || existingTarget\n        ;[property, target, path] = getTargetFrom(property, target, path, stack)\n        updateValue.set = updateMany\n        return updateValue\n\n        function updateValue(newValue) {\n            if (typeof newValue === \"function\") {\n                newValue = newValue(get(target, property))\n            }\n            set(target, property, newValue)\n            emit(target, path, property, newValue)\n        }\n\n        function updateMany(newValue) {\n            recurseSet(newValue, get(target, property, {}), [\n                ...path,\n                ...getPath(property)\n            ])\n        }\n    }\n\n    /**\n     * Causes the caller to refresh if any of the paths change\n     * @param {Array.<string>|string} paths - the paths to refresh on\n     * @returns {number} the current unique id of the refresh\n     */\n    useRefresh(...paths) {\n        const { target, path } = this[useTargetContext]()\n        const [id, refresh] = useState(-1)\n        const currentRefresh = useRef()\n        currentRefresh.current = refresh\n        React.useEffect(() => {\n            return () => {\n                currentRefresh.current = noop\n            }\n        }, [])\n\n        const patterns = []\n        for (let p of paths.flat(Infinity)) {\n            patterns.push(...getPatterns(target, [...path, ...getPath(p)]))\n        }\n        useEvent(Array.from(new Set(patterns)), update)\n        return id\n        function update() {\n            currentRefresh.current(refreshId++)\n        }\n    }\n\n    /**\n     * Returns a bound component, the properties of the bound\n     * component are extended on use\n     * @see Bound\n     * @param {BoundProps} bindingProps - the properties of the binding\n     * @returns {Function} a bound component\n     * @example\n     *\n     * const Input = state.bind({component: <input style={{fontSize: '120%'}} />})\n     *\n     * function Example() {\n     *     return <div>\n     *         <Input property=\"firstName\"/>\n     *         <Input property=\"lastName\"/>\n     *     </div>\n     * }\n     */\n    bind(bindingProps) {\n        const self = this\n        return function ({ state = self, ...props }) {\n            return <state.Bound {...bindingProps} {...props} />\n        }\n    }\n\n    /**\n     * Returns the current target of the the context\n     * @returns {object} the target\n     * @example\n     *\n     * const current = state.useCurrentTarget()\n     * const copy = JSON.parse(JSON.stringify(current))\n     */\n    useCurrentTarget() {\n        const { target } = this[useTargetContext]()\n        return target\n    }\n\n    /**\n     * Returns the current path of the context\n     * @returns {Array<string>} the current path to the bound target\n     */\n    useCurrentPath() {\n        const { path } = this[useTargetContext]()\n        return path\n    }\n}\n\n/**\n * @interface BoundProps\n * @property {object} [component=<input/>] - the component to be bound as an executed JSX expression\n * @property {string} [property] - the property to which the component should be bound\n * @property {any} [defaultValue] - a default value for the property\n * @property {TransformValue} [transformIn] - a function to transform inbound values\n * @property {TransformValue} [transformOut] - a function to transform outbound values\n * @property {any} [updateOnBlur] - set if the component should only update when it blurs\n * @property {Extractor} [extract] - a function that transforms event values to real values - default\n * version will extract from event.target.value if available, otherwise the value itself\n * @property {string} [attribute=\"value\"] - the attribute to bind to\n * @property {string} [event=\"onChange\"] - the event to be bound for changes\n * @property {string} [blurEvent=\"onBlur\"] - the event for blurring\n * @property {object} [target] - an override for the target\n */\n\n/**\n * Returns a component bound to the state model\n * @function Bound\n * @memberOf State\n * @param {BoundProps} props\n * @returns {Function} a component to be rendered\n * @instance\n * @example\n *\n * function SubComponent() {\n *     return <div>\n *         <Bound component={<TextField variant=\"outlined\"/>} property=\"name\"/>\n *     </div>\n * }\n *\n */\nfunction Bound({\n    component = <input />,\n    property,\n    defaultValue,\n    transformIn,\n    transformOut,\n    extract,\n    attribute,\n    updateOnBlur,\n    blurEvent,\n    event,\n    target,\n    ...other\n}) {\n    const Component = (component && component.type) || Dummy\n    const props = (component && component.props) || {}\n    const extraProps = this.useBinding(property, {\n        defaultValue,\n        transformIn,\n        transformOut,\n        extract,\n        attribute,\n        event,\n        target,\n        blurEvent,\n        updateOnBlur\n    })\n    return <Component {...extraProps} {...props} {...other} />\n}\n\nBound.propTypes = {\n  attribute: PropTypes.string,\n  blurEvent: PropTypes.any,\n  component: PropTypes.object,\n  defaultValue: PropTypes.any,\n  event: PropTypes.string,\n  extract: PropTypes.func,\n  property: PropTypes.string,\n  target: PropTypes.object,\n  transformIn: PropTypes.func,\n  transformOut: PropTypes.func,\n  updateOnBlur: PropTypes.any\n}\n\nBound.defaultProps = {\n  component: <input />\n}\n\nfunction recurseSet(newValue, target, path = []) {\n    for (let [key, updatedValue] of Object.entries(newValue)) {\n        if (typeof updatedValue === \"object\" && !Array.isArray(updatedValue)) {\n            recurseSet(updatedValue, get(target, key, {}), [...path, key])\n        } else {\n            set(target, key, updatedValue)\n            emit(target, path, `${key}`, updatedValue)\n        }\n    }\n}\n\n/**\n * Used to notify of events\n * @callback ChangeEvent\n * @param {object} target - the target that has been changed\n */\n\n/**\n * @interface BindProps\n * @property {object} [target] - the target of the binding\n * @property {string} [property] - the property of the current binding to use\n * @property {ChangeEvent} [onChange] - called when any child of the binding changes\n * @property {Function|Array} [children] - the children of this binding\n */\n\n/**\n * A binding target, linking the state to an object\n * @method Bind\n * @memberOf State\n * @instance\n * @param {BindProps} props - properties\n * @returns {Function} the JS component\n * @example\n *\n * const state = createState(\"global\")\n * let someState = {id: 1234, name: \"Mike\"}\n *\n * function App() {\n *     return <state.Bind target={someState}>\n *         <InnerComponents/>\n *     </state.Bind>\n * }\n *\n */\nfunction Bind({ target, property = \"\", onChange = () => {}, children }) {\n    const self = this\n    const innerId = React.useRef(refreshId++)\n    let { target: existingTarget, path, stack } = this[useTargetContext]()\n    if (target && !targetIds.has(target)) {\n        targetIds.set(target, nextId++)\n        path = [`${targetIds.get(target)}`]\n    } else if (target) {\n        path = [`${targetIds.get(target)}`]\n    } else {\n        target = existingTarget\n    }\n    const [finalTarget, setFinalTarget] = React.useState(target)\n    const currentTarget = useRef()\n    currentTarget.current = setFinalTarget\n    React.useEffect(() => {\n        return () => {\n            currentTarget.current = noop\n        }\n    }, [])\n    useEvent(`${targetIds.get(finalTarget)}`, update)\n    let updatedPath = [...path, ...getPath(property)]\n    useEvent(\n        getPatterns(finalTarget, updatedPath).map((p) => `${p}.**`),\n        () => onChange(finalTarget)\n    )\n    const [subTarget, , , id] = this.useState(property, {}, finalTarget)\n    if (Array.isArray(subTarget)) {\n        return <ArrayContents key={id} />\n    } else {\n        if (typeof subTarget !== \"object\")\n            throw new Error(\"You must bind to an object or an array\")\n        return (\n            <this.context.Provider\n                key={`${id}:${innerId.current}`}\n                value={{\n                    target: subTarget,\n                    path: updatedPath,\n                    stack: [...stack, { target: subTarget, path: updatedPath }]\n                }}\n            >\n                {children}\n            </this.context.Provider>\n        )\n    }\n\n    function update(newValue) {\n        targetIds.set(newValue, targetIds.get(target))\n        innerId.current = refreshId++\n        currentTarget.current(newValue)\n    }\n\n    function ArrayContents() {\n        let output = []\n        for (let i = 0; i < subTarget.length; i++) {\n            output.push(<Item key={i} index={i} />)\n        }\n        return output\n    }\n\n    function Item({ index }) {\n        return (\n            <IndexContext.Provider value={index}>\n                <self.Bind property={`${property}.${index}`}>\n                    {children}\n                </self.Bind>\n            </IndexContext.Provider>\n        )\n    }\n}\n\nBind.propTypes = {\n    children: PropTypes.any,\n    onChange: PropTypes.func,\n    property: PropTypes.string.isRequired,\n    target: PropTypes.object\n}\n\nBind.defaultProps = {\n    onChange: () => {},\n    property: \"\"\n}\n","/**\n * @callback ExtractSortValue\n * @param sortItem - the item being sorted\n * @returns the value to sort on\n */\n\n/**\n * Creates a function for Array.sort that will call a function\n * to extract the values to compare\n * @param {ExtractSortValue} extract - the function to extract a value\n * @returns {Function} a sort function for array sort\n */\nexport function sortByExtraction(extract) {\n    return function (a, b) {\n        const va = extract(a)\n        const vb = extract(b)\n        return vb > va ? -1 : va === vb ? 0 : 1\n    }\n}\n\n/**\n * Returns a property of an object\n * @param {string} property - property to extract\n * @returns {Function} a function to extract the value from an object\n */\nexport function pick(property) {\n    return function(object) {\n        return object[property]\n    }\n\n}\n\n/**\n * A sort function to sort items by a priority field or 0 if missing\n * @function\n */\nexport const inPriorityOrder = sortByExtraction((v) => v.priority || 0)\n","import PropTypes from \"prop-types\"\nimport React from \"react\"\nimport Emitter from \"./emitter\"\nimport { inPriorityOrder } from \"./sort\"\n\nclass Cancel  {\n    constructor(message) {\n        this.name = \"Cancel\"\n        this.message = message\n        this.stack = new Error().stack\n    }\n}\n\n\nconst Framework = (window.Framework = window.Framework || {})\n\n/**\n * Event handler\n */\nexport let events = new Emitter({\n    storeHandlers: (handlers) => handlers.sort(inPriorityOrder)\n})\n\n/**\n * Change the event source of the bus, useful\n * for testing\n * @param {Object} newSource - a source of events\n */\nexport function setEventSource(newSource) {\n    events = newSource\n}\n\n/**\n * Immediately stop a chain of event handlers and\n * exit\n */\nexport function stopPropagationAndExit() {\n    throw new Cancel()\n}\n\n/**\n * Applies an event handler safely ensuring that the\n * event is removed when the calling component\n * unmounts\n *\n * @param {String} pattern - the event pattern to match\n * @param {Function} handler - the event handler\n * @param {Number} [priority] - the priority for this handler, lower is better, default is 0\n */\nexport function useEvent(pattern, handler, priority) {\n    React.useEffect(() => {\n        return handle(pattern, handler, priority)\n    })\n}\n\n/**\n * Adds an event handler to the event bus\n * and returns a function to\n * remove the handler.\n * Wildcards may be used with '*', '**' and '.' to\n * separate parts of the event name.\n *\n * @param {String} pattern - the event pattern to match\n * @param {Function} handler - the handler function for the event\n * @param {Number} [priority] - the priority for this handler, lower is better, default is 0\n * @return {Function} a function to remove the event handler\n */\nexport function handle(pattern, handler, priority) {\n    handler.priority = priority\n    events.on(pattern, handler)\n\n    return function () {\n        events.off(pattern, handler)\n    }\n}\n\n/**\n * Add an event handler that will trigger only once\n * @param {String} pattern - the event pattern to match\n * @param {Function} handler - the handler function for the event\n * @param {Number} [priority] - the priority for this handler, lower is better, default is 0\n * @param {Number} [timeout] - a timeout for automatically removing the handler\n * @returns {Function} a function to remove the handler\n */\nexport function once(pattern, handler, priority, timeout = 0) {\n    handler.priority = priority\n    events.once(pattern, handler)\n    if (timeout) {\n        setTimeout(remove, timeout)\n    }\n    return remove\n    function remove() {\n        events.off(pattern, handler)\n    }\n}\n\n/**\n * Raises an event on the event bus during the next free time\n * @param {String} event - the event to raise\n * @param  {...any} params - the parameters for the event\n * @return {Array<any>} - the parameters passed to the function which\n * is useful so that you can return values without initiailizing them\n * @example\n * const [list] = raise('addToThisList', []) // list will be the list passed to the event\n */\nexport function raiseLater(event, ...params) {\n    setTimeout(() => raise(event, ...params))\n}\n\n/**\n * Raises an event on the event bus\n * @param {String} event - the event to raise\n * @param  {...any} params - the parameters for the event\n * @return {Array<any>} - the parameters passed to the function which\n * is useful so that you can return values without initiailizing them\n * @example\n * const [list] = raise('addToThisList', []) // list will be the list passed to the event\n */\nexport function raise(event, ...params) {\n    try {\n        events.emit(event, ...params)\n    } catch (e) {\n        if (e instanceof Cancel) {\n            return params\n        }\n        throw e\n    }\n    return params\n}\n\n/**\n * Raises an asynchronous event on the event-bus\n * you may wait for the Promise\n * @param {String} event - the event to be raised\n * @param  {...any} params - the parameters passed to the event\n * @return {Array<any>} the parameters passed to the function\n */\nexport async function raiseAsync(event, ...params) {\n    try {\n        await events.emitAsync(event, ...params)\n    } catch (e) {\n        if (e instanceof Cancel) {\n            return params\n        }\n        throw e\n    }\n    return params\n}\n\n/**\n * Helper function to allow safe addition of event handlers\n * in a generator function.  The provided generator is given\n * a function to add event handlers to the event bus - the\n * handlers will automatically be removed when the generator\n * exits\n * @param {(Function)} fn - a generator function to call.  It will be passed\n * a function to attach handlers that will be removed when the generator\n * function exits\n */\nexport function* using(fn) {\n    const handlers = []\n    try {\n        yield* fn(addHandler)\n    } finally {\n        handlers.forEach(({ event, handler }) => {\n            events.off(event, handler)\n        })\n    }\n\n    function addHandler(event, handler) {\n        handlers.push({ event, handler })\n        events.on(event, handler)\n    }\n}\n\n/**\n * Inserts an inversion of control socket that uses the event\n * bus to find \"plugs\" to render.  The type indicates the\n * type of plug to find, a filter property allows you to filter\n * the resulting list.\n * @component\n * @example\n * <Socket type=\"yourType\" any=\"other\" propsYou={{like: 'here'}}/>\n */\nexport function Socket({ filter = returnValue, type, children, ...props }) {\n    let [items] = raise(\n        `ui-plug.${type}`,\n        [children && { Component: Children, priority: 100 }],\n        props\n    )\n    items = items.filter(Boolean)\n    items.sort(inPriorityOrder)\n    raise(`ui-render-plugs.${type}`, items)\n    return (\n        <>\n            {filter(items).map(({ Component }, index) => (\n                <Component key={index} {...props} />\n            ))}\n        </>\n    )\n\n    function Children() {\n        return children\n    }\n}\nSocket.propTypes = {\n    filter: PropTypes.func,\n    type: PropTypes.string.isRequired\n}\n\n/**\n * Helper function to pass to socket filter, chooses the single highest\n * priority item to render\n * @param {Array} items\n */\nexport function bestOnly(items) {\n    return items[0]\n}\n\n/**\n * Helper function to pass to socket filter, selects plugs with a priority\n * lower than a default if there are more than one plugs matching. Used\n * to override defaults - the default will be displayed if there is nothing\n * with a greater priorty\n * @param {Number} value - the priority to display items < than\n */\nexport function lessThan(value) {\n    return function (items) {\n        return items.length < 2\n            ? items\n            : items.filter((i) => i.priority < value)\n    }\n}\n\nfunction returnValue(value) {\n    return value\n}\n\n/**\n * Get the next value\n * @callback PredicateCallback\n * @param {Object} props - The properties passed to the socket\n * @param {Array} list - The currently added items\n * @return {Number|Boolean} return false to not render, otherwise return a priority\n */\n\n/**\n *\n * @param {String} type - the type of the plug\n * @param {PredicateCallback} [predicate] - an optional function to return a priority or \"false\"\n * if the component should not render give the properties passed\n * @param {Function} Component\n * @param {Number} [priority=100] The priority for the component\n */\nexport function plug(type, predicate, Component, priority = 0) {\n    if (typeof Component === \"number\") {\n        priority = Component\n        Component = predicate\n        predicate = () => priority\n    } else if (Component === undefined) {\n        Component = predicate\n        predicate = () => priority\n    }\n    handle(`ui-plug.${type}`, function (list, props) {\n        const priority = predicate(props, list)\n        if (priority) {\n            list.push({ Component, priority })\n        }\n    })\n}\n\n/**\n * Ensures that a passed in item is an array\n * by wrapping it in an array if it isn't\n * already one.  The array is filtered to ensure\n * no empty values\n * so passing undefined or null will end up with an\n * empty array\n * @param item\n * @returns {Array} the wrapped array\n */\nexport function ensureArray(item) {\n    return Array.isArray(item) ? item : [item].filter((f) => f !== undefined)\n}\n","import {createState} from 'react-bound-state'\n\nexport const globalState = createState(\"global\")\nexport const styleState = createState(\"style\")\n","import { SortableContainer, SortableElement } from \"react-sortable-hoc\"\nimport { CardContent, ListItem } from \"@material-ui/core\"\nimport { globalState, styleState } from './states'\nimport { useIndex } from \"react-bound-state\"\nimport Box from \"@material-ui/core/Box\"\nimport Typography from \"@material-ui/core/Typography\"\nimport Button from \"@material-ui/core/Button\"\nimport React from \"react\"\nimport Card from \"@material-ui/core/Card\"\nimport CardHeader from \"@material-ui/core/CardHeader\"\nimport Checkbox from \"@material-ui/core/Checkbox\"\nimport CardActions from \"@material-ui/core/CardActions\"\nimport List from \"@material-ui/core/List\"\nimport { Bind, Input, useState } from \"./App\"\nimport { MdDragHandle } from \"react-icons/all\"\n\nconst SortableList = SortableContainer(List)\nconst SortableItem = SortableElement(ListItem)\n\nfunction arrayMoveInPlace(array, previousIndex, newIndex) {\n    if (newIndex >= array.length) {\n        let k = newIndex - array.length\n\n        while (k-- + 1) {\n            array.push(undefined)\n        }\n    }\n\n    array.splice(newIndex, 0, array.splice(previousIndex, 1)[0])\n    return array\n}\n\nexport function Todos() {\n    console.log(\"draw Todos\")\n    const setTodos = globalState.useSetter(\"todos\")\n    return (\n        <Box>\n            <Box ml={2}>\n                <Typography variant={\"h6\"} component={\"h1\"} gutterBottom>\n                    Todo List\n                </Typography>\n            </Box>\n            <Box width={1} clone>\n                <SortableList\n                    distance={4}\n                    onSortEnd={update}\n                    component=\"div\"\n                    helperClass={\"dragger\"}\n                >\n                    <Bind property={\"todos\"}>\n                        <Todo />\n                    </Bind>\n                </SortableList>\n            </Box>\n            <Box mt={2}>\n                <Button color={\"primary\"} onClick={add}>\n                    + Add Todo\n                </Button>\n            </Box>\n        </Box>\n    )\n\n    function update({ oldIndex, newIndex }) {\n        setTodos((prev) => arrayMoveInPlace(prev, oldIndex, newIndex))\n    }\n\n    function add() {\n        const newTodo = prompt(\"What must you do?\", \"\")\n        if (newTodo) {\n            setTodos((prev) => [\n                ...prev,\n                { title: newTodo, description: \"\", done: false }\n            ])\n        }\n    }\n}\n\nfunction Todo() {\n    const [title, setTitle] = useState(\"title\")\n    const [done] = useState(\"done\", false)\n    const [todos, setTodos] = useState(\"^todos\")\n    const [me] = useState()\n    const index = useIndex()\n    const [fontWeight] = styleState.useState(\"style.fontWeight\")\n    return (\n        <SortableItem index={index} component={\"div\"}>\n            <Card className=\"full-width\" variant={\"outlined\"}>\n                <CardHeader\n                    avatar={<MdDragHandle />}\n                    title={\n                        <span\n                            style={{\n                                fontWeight,\n                                textDecoration: done ? \"line-through\" : \"\"\n                            }}\n                        >\n                            {title}\n                        </span>\n                    }\n                    action={\n                        <globalState.Bound\n                            property={\"done\"}\n                            component={<Checkbox color={\"primary\"} />}\n                            attribute={\"checked\"}\n                            extract={(e) => e.target.checked}\n                        />\n                    }\n                />\n                <CardContent>\n                    <Input label=\"Notes\" multiline property={\"description\"} />\n                </CardContent>\n                <CardActions>\n                    <Button color={\"primary\"} onClick={rename}>\n                        Rename\n                    </Button>\n                    <Button color={\"secondary\"} onClick={remove}>\n                        Delete\n                    </Button>\n                </CardActions>\n            </Card>\n        </SortableItem>\n    )\n\n    function rename() {\n        const newName = prompt(\"Enter description\", title)\n        if (newName) {\n            setTitle(newName)\n        }\n    }\n\n    function remove() {\n        setTodos(todos.filter((t) => t !== me))\n    }\n}\n","export const defaultExample = {\n  profile: {\n    name: 'Mike Talbot',\n    location: 'Bristol'\n  },\n  description:\n    'On the other hand, we denounce with righteous indignation and dislike men who are so beguiled and demoralized by the charms of pleasure of the moment, so blinded by desire, that they cannot foresee the pain and trouble that are bound to ensue; and equal blame belongs to those who fail in their duty through weakness of will, which is the same as saying through shrinking from toil and pain. These cases are perfectly simple and easy to distinguish. In a free hour, when our power of choice is untrammelled and when nothing prevents our being able to do what we like best, every pleasure is to be welcomed and every pain avoided. But in certain circumstances and owing to the claims of duty or the obligations of business it will frequently occur that pleasures have to be repudiated and annoyances accepted. The wise man therefore always holds in these matters to this principle of selection: he rejects pleasures to secure other greater pleasures, or else he endures pains to avoid worse pains.',\n  todos: [\n    {\n      title: 'I must do this',\n      description: 'Or I\\'ll get in trouble with the missus',\n      done: false\n    },\n    { title: 'I actually did do this', description: 'Phew', done: true }\n  ]\n}\n","import { styleState } from './states'\nimport Box from '@material-ui/core/Box'\nimport React from 'react'\nimport Card from '@material-ui/core/Card'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport { CardContent } from '@material-ui/core'\nimport { Combo, useState, useStyles } from './App'\n\nexport function Description() {\n  const [description] = useState('description')\n  const [color] = styleState.useState('color')\n  console.log('draw Description')\n  return (\n    <Box>\n      <Box p={2} color={color}>\n        {description}\n      </Box>\n      <Combo\n        property={'color'}\n        defaultValue={'red'}\n        options={['red', 'darkred', 'blue', 'green', 'darkgreen']}\n      />\n    </Box>\n  )\n}\n\nexport function Profile() {\n  const classes = useStyles()\n  const [name] = useState('name')\n  const [location] = useState('location')\n  console.log('draw Profile')\n  return (\n    <Card>\n      <CardHeader title={'Profile'} action={<Bubble/>}/>\n      <CardContent>\n        <Box mt={1} className={classes.name}>\n          {name}\n        </Box>\n        <Box mt={1} className={classes.location}>\n          {location}\n        </Box>\n      </CardContent>\n    </Card>\n  )\n}\n\nfunction Bubble() {\n  const [color] = styleState.useState('color')\n  const props = styleState.useBinding('style', { attribute: 'style' })\n  console.log('draw Bubble')\n  return (\n    <Box\n      style={{ ...props.style }}\n      m={1}\n      borderRadius={'100%'}\n      bgcolor={color}\n      width={32}\n      height={32}\n    >\n      Pr\n    </Box>\n  )\n}\n","import React from 'react'\nimport { globalState, styleState } from './states'\nimport { Container, createMuiTheme, CssBaseline, TextField } from '@material-ui/core'\nimport Grid from '@material-ui/core/Grid'\nimport Box from '@material-ui/core/Box'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport { FiGithub, GiRopeCoil } from 'react-icons/all'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport GitHubButton from 'react-github-btn'\nimport primary from '@material-ui/core/colors/deepPurple'\nimport { ThemeProvider } from '@material-ui/styles'\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport Button from '@material-ui/core/Button'\nimport { Todos } from './todo'\nimport { defaultExample } from './dummy-data'\nimport { debounce, titleize } from './utils'\nimport { Description, Profile } from './profile'\n\nconst theme = createMuiTheme({\n    palette: {\n        primary\n    }\n})\n\nconst example = JSON.parse(\n    localStorage.getItem(\"store\") || JSON.stringify(defaultExample)\n)\n\nconst styles = {\n    color: \"blue\",\n    style: {\n        fontSize: 22,\n        color: \"white\",\n        fontWeight: 200,\n        textAlign: \"center\",\n        textShadow: \"\",\n        boxShadow: \"\"\n    }\n}\n\nconst original = JSON.parse(JSON.stringify(styles))\n\nexport const { Bind, useState } = globalState\n\nexport const Input = globalState.bind({\n    component: <TextField variant={\"outlined\"} fullWidth />\n})\n\nexport const Combo = styleState.bind({\n    extract(_, value) {\n        return value\n    },\n    component: (\n        <Autocomplete\n            options={[]}\n            fullWidth\n            renderInput={(params) => (\n                <TextField {...params} label=\"Combo box\" variant=\"outlined\" />\n            )}\n        />\n    )\n})\n\nexport const useStyles = makeStyles((theme) => ({\n    icon: {\n        fontSize: \"250%\",\n        marginRight: theme.spacing(2)\n    },\n    topBar: {\n        cursor: \"pointer\"\n    },\n    githubIcon: {\n        color: \"white\"\n    },\n    name: {\n        fontSize: \"120%\"\n    },\n    location: {\n        fontWeight: \"bold\"\n    }\n}))\n\nconst save = debounce((data) => {\n    localStorage.setItem(\"store\", JSON.stringify(data))\n})\n\nconst App = () => {\n    const classes = useStyles()\n    return (\n        <ThemeProvider theme={theme}>\n            <styleState.Bind target={styles}>\n                <Bind onChange={save} target={example}>\n                    <CssBaseline />\n                    <AppBar position={\"sticky\"} className={classes.topBar}>\n                        <Toolbar>\n                            <GiRopeCoil className={classes.icon} />\n                            <Typography variant=\"h6\" color=\"inherit\" noWrap>\n                                REACT-BOUND-STATE\n                            </Typography>\n                            <Box flexGrow={1} />\n                            <GitHubButton\n                                href=\"https://github.com/miketalbot/react-bound-state\"\n                                data-color-scheme=\"no-preference: light; light: light; dark: dark;\"\n                                data-icon=\"octicon-star\"\n                                data-size=\"large\"\n                                data-show-count=\"true\"\n                                aria-label=\"Star miketalbot/js-coroutines on GitHub\"\n                            >\n                                Star\n                            </GitHubButton>\n\n                            <IconButton\n                                href={\n                                    \"https://github.com/miketalbot/react-bound-state\"\n                                }\n                            >\n                                <FiGithub className={classes.githubIcon} />\n                            </IconButton>\n                        </Toolbar>\n                    </AppBar>\n                    <Box mt={6}>\n                        <Container>\n                            <Example />\n                        </Container>\n                    </Box>\n                </Bind>\n            </styleState.Bind>\n        </ThemeProvider>\n    )\n}\n\nfunction Example() {\n    const resetStyles = styleState.useSetter()\n    const resetContents = globalState.useSetter()\n    const { set } = styleState.useSetter(\"style\")\n    const setColor = styleState.useSetter(\"style.color\")\n    const setWeight = styleState.useSetter(\"style.fontWeight\")\n    console.log(\"draw Example\")\n    return (\n        <Grid container spacing={2}>\n            <Grid item md={5}>\n                <Box mt={2}>\n                    <Input property={\"profile.name\"} label={\"Name\"} />\n                </Box>\n                <Box mt={2}>\n                    <Input property={\"profile.location\"} label={\"Location\"} />\n                </Box>\n                <Box mt={2}>\n                    <Input\n                        updateOnBlur\n                        multiline\n                        property={\"description\"}\n                        label={\"Description\"}\n                    />\n                </Box>\n                <Box mt={2}>\n                    <Combo\n                        getOptionLabel={(v) => titleize(v)}\n                        property={\"color\"}\n                        defaultValue={\"red\"}\n                        options={[\n                            \"red\",\n                            \"darkred\",\n                            \"blue\",\n                            \"green\",\n                            \"darkgreen\"\n                        ]}\n                    />\n                </Box>\n                <Box mt={2} display={\"flex\"}>\n                    <Box mr={2}>\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={change}\n                        >\n                            Profile color\n                        </Button>\n                    </Box>\n                    <Box mr={2}>\n                        <Button\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            onClick={changeWeight}\n                        >\n                            Font Weight\n                        </Button>\n                    </Box>\n                    <Box mr={2}>\n                        <Button variant=\"contained\" onClick={changeMultiple}>\n                            Change Multiple\n                        </Button>\n                    </Box>\n                    <Box mr={2}>\n                        <Button color={\"secondary\"} onClick={reset}>\n                            Reset\n                        </Button>\n                    </Box>\n                </Box>\n\n\n\n            </Grid>\n            <Grid item md={4}>\n                <Todos/>\n            </Grid>\n            <Grid item md={3}>\n                <Bind property={\"profile\"}>\n                    <Profile />\n                </Bind>\n\n                <Description />\n            </Grid>\n        </Grid>\n    )\n\n    function reset() {\n        resetStyles(JSON.parse(JSON.stringify(original)))\n        resetContents.set(JSON.parse(JSON.stringify(defaultExample)))\n    }\n\n    function change() {\n        setColor(\n            `rgb(${~~(Math.random() * 255)}, ${~~(Math.random() * 255)}, ${~~(\n                Math.random() * 255\n            )})`\n        )\n    }\n\n    function changeWeight() {\n        setWeight((prev) => (prev + 200) % 800)\n    }\n\n    function changeMultiple() {\n        set({\n            color: \"white\",\n            textShadow: \"0 0 4px white\",\n            boxShadow: \"0 0 12px #00000060\"\n        })\n    }\n}\n\nexport default App\n","export function titleize(v) {\n    if (!v) return \"\"\n    const words = v.split(\" \")\n    return words\n        .map(\n            (word) =>\n                word.slice(0, 1).toUpperCase() + word.slice(1).toLowerCase()\n        )\n        .join(\" \")\n}\n\nexport function debounce(fn, delay = 300) {\n    let id = 0\n    return function (...params) {\n        clearTimeout(id)\n        id = setTimeout(() => fn(...params), delay)\n    }\n}\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}